<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--shiro主体的定义-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="login.html" />
        <property name="unauthorizedUrl" value="403.html" />
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon
                /toLogin = anon
                /hello = anon
                /666.jsp = anon
                /say =anon
                /index.jsp = anon
                / = anon
                /* = authc
            </value>
            <!--authc则是需要验证，anon是不需要验证-->
            <!--roles["admin"] 需要admin的角色-->
            <!--属于user或者admin之一;使用注解修改logical为OR 即可
                @RequiresRoles(value={"user","admin"},logical=Logical.OR)-->
            <!--perms["user:add"] 需要user:add的权限-->
        </property>

    </bean>
    <!--创建SecurityManager对象-->
    <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
        <property name="realm" ref="realm" />
    </bean>
    <!--创建自定义realm-->
    <bean id="realm" class="cn.cote.shiro.realm.CustomRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    <!--md5配置-->
    <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher" id="credentialsMatcher">
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="1"/>
    </bean>

    <!--shiro注解配置-->
    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>